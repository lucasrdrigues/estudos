server {
        listen 8080;
        # Se não colocar a linha abaixo, podemos usar o ip da máquina para poder acessar o server
        server_name localhost;
	
        # Se tentar acessar localhost:80/nomearquivo sem especificar o caminho dele abaixo(ele tem que estar criado)
        # irá dar certo da mesma forma

	# Algumas observações importantes:
	# O parâmetro root define o diretório base para aquela localização (location).
	# O NGINX concatena o valor da URL após a location com o caminho root.
 	# Como sua location é / (raiz), tudo após a barra será adicionado ao caminho root.
        # Quando chegar uma requisição em qualquer endpoint(simbolizado pela "/"), busque os arquivos no local:
        location / {
                # root é a pasta raiz("/") e partir dela, irá procurar a /home/.....
		# Abaixo terá os arquivos que eles irão procurar
                root /home/lucas/ti/estudos/alura/nginx;
                index index.html;

        }

	# Usando regex(expressões regulares):
	# ~ : indica que é uma regex
	# \.php$ -> indica que é qualquer a caminho que termine com .php
		# \. use a barra para indicar que é o caracter "ponto", pois ponto em regex significa qualquer caractere
		# $ indica que deve ser no final
	# Quando alguma requisição chegar que termine com .php envie para o servidor que esta rodando na porta 8000:
	location ~ \.php$ {
		proxy_pass http://localhost:8000;
	}


	# Testando conceitos de API manager
	
	# Quando eu acessar localhost:8080/servico1 quero que me leve para localhost:8001/
	# Estamos usando a barra no final em 8001 pq caso eu queira acessar localhost:8080/servico1/teste
	# eu quero ser encaminhado para localhost:8001/teste e NÃO localhost:8001/servico1/teste, pois se a gente tirar a "/"
	# do final, ele irá adicionar o "servico1" dps do "8001:"(ficaria localhost:8001/servico1 ou localhost:8001/servico1/algo).
	# OU SEJA, a barra no final ignora o que receber do location, de forma a não adicionar no encaminhamento novo
	location /servico1 {
		proxy_pass http://localhost:8001/;
	}
	
        location /servico2 {
                proxy_pass http://localhost:8002/;
        }
	

	# Caso algum erro ocorra, o nginx levará para a página erro.html que esta dentro da pasta
	# especificada lá em cima em root /home/..., como por exemplo colocar um caminho que nao existe na url
	error_page 404 400 401 /erro.html;
	# Para fazer o teste use: http://localhost:8080/alguma-coisa -> lembre-se de especificar a porta
        # pois estamos usando uma diferente da padrão(80)
}
